#!/bin/bash
set -e

# Script level settings
cwd=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)
yml="${cwd}/docker-compose.yml"
image="$1"
pid=${BASHPID}
hostname=$(head -n1 $yml | cut -d: -f1)
cname=test${pid}_${hostname}_1

source "${cwd}/../../_tools/helpers/common.sh"

cd "$( dirname "${BASH_SOURCE[0]}" )"

# destroy containers and remove trash
cleanup() {
    set +e
    docker-compose -p "test${pid}" -f $yml stop &>/dev/null
    docker-compose -p "test${pid}" -f $yml rm -fv &>/dev/null
    set -e
}
trap cleanup EXIT

run_test() {
	local host="$1"
	local ip="$2"
	local expected="$3"

	#echo "TESTING: host=$host expected=$expected "
	local body=$(wget --header "Host: $host" -qt 1 -O - "$ip")
	if [ "$expected" == "$body" ]
	then
		return 0
	fi

	echo "ERROR: unexpected result for $host, expected: $expected; got: $body"
	return 1
}


# ===== default case

docker-compose -p "test${pid}" -f $yml up -d &>/dev/null
box_ip=$(get_container_ip $cname)
wait_for_connection $box_ip:80

run_test "example.org" $box_ip "website"
run_test "backend.dev" $box_ip "backend"
run_test "backend" $box_ip "website"
run_test "cdn.dev" $box_ip "media"
run_test "cdn.foo.bar.dev" $box_ip "media"

cleanup

# ===== unknown hosts gets 404

cat $yml | phyaml web.environment.NFQ_PROXY_MAP='backend.*:backend cdn.*:media' | docker-compose -p "test${pid}" -f - up -d &>/dev/null
box_ip=$(get_container_ip $cname)
wait_for_connection $box_ip:80


run_test "example.org" $box_ip ""
run_test "backend.dev" $box_ip "backend"
run_test "backend" $box_ip ""
run_test "cdn.dev" $box_ip "media"
run_test "cdn.foo.bar.dev" $box_ip "media"

cleanup

# ===== default defined last

cat $yml | phyaml web.environment.NFQ_PROXY_MAP='backend.*:backend cdn.*:media *:website' | docker-compose -p "test${pid}" -f - up -d &>/dev/null
box_ip=$(get_container_ip $cname)
wait_for_connection $box_ip:80


run_test "example.org" $box_ip "website"
run_test "backend.dev" $box_ip "backend"
run_test "backend" $box_ip "website"
run_test "cdn.dev" $box_ip "media"
run_test "cdn.foo.bar.dev" $box_ip "media"

cleanup

#TODO: tests responce from container on different port


exit 0

